{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13440\viewh7800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Start with `git init` in terminal to initialise git in the local directory\
\
Staging Area: A middle ground where you can decide which files you want to commit to the master/main or any other branch of the repository. \
To see what files are currently in the staging area, run `git status` in the terminal\
To add files/folders to the staging area, run `git add \{file/folder path\}`. To add all the files in the working directory, run `git add .`\
\
Committing Changes is finalising all the files you want to add in the staging area and creating a savepoint. To do this, run `git commit`. To add a message to the commit use the `-m` flag like this `git commit -m \'93message\'94` (Use present tense in message as per convention)\
You can see all the commits you\'92ve made by using `git log`}